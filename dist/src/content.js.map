{"version":3,"file":"content.js","sources":["../../src/content/contentScript.ts"],"sourcesContent":["// Content script for DOMinator extension\n\n// Store references to highlighted elements and overlay\nlet highlightedElement: Element | null = null;\nlet overlay: HTMLElement | null = null;\nlet originalDOM: string | null = null;\nlet enhancedDOM: string | null = null;\nlet enhancedModeEnabled = false;\n\n// Define the DOMNode interface for type safety\ninterface DOMNode {\n  id: string;\n  tagName: string;\n  attributes: Record<string, string>;\n  textContent?: string;\n  children: DOMNode[];\n  parentId?: string;\n  xpath?: string;\n  cssSelector?: string;\n  depth: number;\n  collapsed?: boolean;\n}\n\n// Generate a unique ID for DOM nodes\nconst generateUniqueId = (): string => {\n  return \"dominator-\" + Math.random().toString(36).substr(2, 9);\n};\n\n// Get XPath for an element\nconst getXPath = (element: Element): string => {\n  if (!element) return \"\";\n  if (element === document.body) return \"/html/body\";\n\n  let ix = 0;\n  const siblings = element.parentElement?.children || [];\n\n  for (let i = 0; i < siblings.length; i++) {\n    const sibling = siblings[i];\n    if (sibling === element) {\n      const path = getXPath(element.parentElement as Element);\n      const tagName = element.tagName.toLowerCase();\n      return `${path}/${tagName}[${ix + 1}]`;\n    }\n\n    if (sibling.tagName === element.tagName) {\n      ix++;\n    }\n  }\n\n  return \"\";\n};\n\n// Get a CSS selector for an element\nconst getCssSelector = (element: Element): string => {\n  if (!element) return \"\";\n  if (element === document.body) return \"body\";\n\n  let selector = element.tagName.toLowerCase();\n\n  if (element.id) {\n    selector += `#${element.id}`;\n    return selector;\n  }\n\n  // Safely handle className which might be a SVGAnimatedString or other non-string type\n  if (element.className && typeof element.className === \"string\") {\n    const classes = element.className.split(\" \").filter((c) => c);\n    if (classes.length > 0) {\n      selector += `.${classes.join(\".\")}`;\n    }\n  } else if (element.classList && element.classList.length > 0) {\n    // Use classList as a fallback\n    selector += `.${Array.from(element.classList).join(\".\")}`;\n  }\n\n  // Add parent context if needed\n  if (element.parentElement && element.parentElement !== document.body) {\n    const parentSelector = getCssSelector(element.parentElement);\n    selector = `${parentSelector} > ${selector}`;\n  }\n\n  return selector;\n};\n\n// Create a simplified representation of a DOM node\nconst createDOMNodeRepresentation = (element: Element, depth = 0): DOMNode => {\n  try {\n    const nodeId = generateUniqueId();\n\n    // Get attributes\n    const attributes: Record<string, string> = {};\n    for (let i = 0; i < element.attributes.length; i++) {\n      const attr = element.attributes[i];\n      attributes[attr.name] = attr.value;\n    }\n\n    // Create node representation\n    const node: DOMNode = {\n      id: nodeId,\n      tagName: element.tagName,\n      attributes,\n      textContent: element.textContent?.trim() || \"\",\n      children: [],\n      xpath: getXPath(element),\n      cssSelector: getCssSelector(element),\n      depth,\n    };\n\n    // Add data attribute to the actual DOM element for later reference\n    element.setAttribute(\"data-dominator-id\", nodeId);\n\n    // Process children (limit depth to avoid excessive recursion)\n    if (depth < 50) {\n      for (let i = 0; i < element.children.length; i++) {\n        const childNode = createDOMNodeRepresentation(\n          element.children[i],\n          depth + 1\n        );\n        childNode.parentId = nodeId;\n        node.children.push(childNode);\n      }\n    }\n\n    return node;\n  } catch (error: any) {\n    throw new Error(`Failed to process DOM element: ${error.message}`);\n  }\n};\n\n// Get the DOM tree starting from document.body\nconst getDOMTree = (): { domTree: DOMNode | null; error?: string } => {\n  try {\n    if (!document || !document.documentElement) {\n      return { domTree: null, error: \"Document not available\" };\n    }\n\n    const domTree = createDOMNodeRepresentation(document.documentElement);\n    return { domTree };\n  } catch (error: any) {\n    return {\n      domTree: null,\n      error: `Failed to get DOM tree: ${error.message || \"Unknown error\"}`,\n    };\n  }\n};\n\n// Highlight an element on the page\nconst highlightElement = (element: Element | null) => {\n  // Remove previous highlight\n  if (overlay) {\n    document.body.removeChild(overlay);\n    overlay = null;\n  }\n\n  if (highlightedElement) {\n    highlightedElement.classList.remove(\"dominator-highlighted\");\n  }\n\n  highlightedElement = element;\n\n  if (!element) return;\n\n  // Add highlight class\n  element.classList.add(\"dominator-highlighted\");\n\n  // Create overlay\n  const rect = element.getBoundingClientRect();\n  overlay = document.createElement(\"div\");\n  overlay.style.position = \"fixed\";\n  overlay.style.border = \"2px solid #0ea5e9\";\n  overlay.style.borderRadius = \"3px\";\n  overlay.style.top = `${rect.top + window.scrollY}px`;\n  overlay.style.left = `${rect.left + window.scrollX}px`;\n  overlay.style.width = `${rect.width}px`;\n  overlay.style.height = `${rect.height}px`;\n  overlay.style.pointerEvents = \"none\";\n  overlay.style.zIndex = \"2147483647\";\n  overlay.style.boxShadow = \"0 0 0 2000px rgba(14, 165, 233, 0.1)\";\n\n  document.body.appendChild(overlay);\n\n  // Scroll into view if needed\n  element.scrollIntoView({\n    behavior: \"smooth\",\n    block: \"center\",\n  });\n};\n\n// Find element by dominator ID\nconst findElementById = (id: string): Element | null => {\n  return document.querySelector(`[data-dominator-id=\"${id}\"]`);\n};\n\n// Toggle enhanced DOM mode\nconst toggleEnhancedDOM = (enabled: boolean) => {\n  enhancedModeEnabled = enabled;\n\n  if (enabled) {\n    if (!originalDOM) {\n      originalDOM = document.documentElement.outerHTML;\n    }\n\n    if (!enhancedDOM) {\n      // Generate enhanced DOM (this would ideally use AI suggestions)\n      // For now, we'll just make some simple semantic improvements\n      enhanceDOMSemantics();\n    } else {\n      // Restore previously generated enhanced DOM\n      document.open();\n      document.write(enhancedDOM);\n      document.close();\n    }\n  } else if (originalDOM) {\n    // Restore original DOM\n    document.open();\n    document.write(originalDOM);\n    document.close();\n  }\n};\n\n// Enhance DOM semantics (simplified version)\nconst enhanceDOMSemantics = () => {\n  // Store current DOM before making changes\n  if (!enhancedDOM) {\n    // Simple semantic improvements\n    // Replace divs with semantic elements where appropriate\n\n    // Find navigation divs\n    const potentialNavs = document.querySelectorAll(\n      'div[class*=\"nav\"], div[class*=\"menu\"], div[id*=\"nav\"], div[id*=\"menu\"]'\n    );\n    potentialNavs.forEach((div) => {\n      if (!(div as HTMLElement).hasAttribute(\"role\")) {\n        (div as HTMLElement).setAttribute(\"role\", \"navigation\");\n      }\n    });\n\n    // Find header divs\n    const potentialHeaders = document.querySelectorAll(\n      'div[class*=\"header\"], div[id*=\"header\"]'\n    );\n    potentialHeaders.forEach((div) => {\n      if (!(div as HTMLElement).hasAttribute(\"role\")) {\n        (div as HTMLElement).setAttribute(\"role\", \"banner\");\n      }\n    });\n\n    // Find footer divs\n    const potentialFooters = document.querySelectorAll(\n      'div[class*=\"footer\"], div[id*=\"footer\"]'\n    );\n    potentialFooters.forEach((div) => {\n      if (!(div as HTMLElement).hasAttribute(\"role\")) {\n        (div as HTMLElement).setAttribute(\"role\", \"contentinfo\");\n      }\n    });\n\n    // Add missing alt attributes to images\n    const images = document.querySelectorAll(\"img:not([alt])\");\n    images.forEach((img) => {\n      (img as HTMLImageElement).alt = \"Image\";\n    });\n\n    // Add missing labels to form controls\n    const formControls = document.querySelectorAll(\n      \"input:not([aria-label]):not([aria-labelledby]):not([title])\"\n    );\n    formControls.forEach((input) => {\n      const type = (input as HTMLInputElement).type;\n      (input as HTMLInputElement).setAttribute(\"aria-label\", `${type} field`);\n    });\n\n    // Store the enhanced DOM\n    enhancedDOM = document.documentElement.outerHTML;\n  }\n};\n\n// Add CSS for highlighted elements\nconst addHighlightStyles = () => {\n  const style = document.createElement(\"style\");\n  style.textContent = `\n    .dominator-highlighted {\n      outline: 2px solid #0ea5e9 !important;\n      outline-offset: -2px !important;\n    }\n  `;\n  document.head.appendChild(style);\n};\n\n// Initialize\nconst initialize = () => {\n  addHighlightStyles();\n\n  // Listen for messages from the popup\n  chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n    if (message.action === \"getDOMTree\") {\n      try {\n        const result = getDOMTree();\n        sendResponse(result);\n      } catch (error: any) {\n        sendResponse({\n          domTree: null,\n          error: `Error processing DOM tree: ${\n            error.message || \"Unknown error\"\n          }`,\n        });\n      }\n    } else if (message.action === \"highlightNode\") {\n      const element = findElementById(message.nodeId);\n      highlightElement(element);\n      sendResponse({ success: true });\n    } else if (message.action === \"toggleEnhancedDOM\") {\n      toggleEnhancedDOM(message.enabled);\n      sendResponse({ success: true });\n    } else if (message.action === \"ping\") {\n      // Simple ping to check if content script is loaded\n      sendResponse({ success: true, message: \"Content script is active\" });\n    }\n\n    // Return true to indicate we'll respond asynchronously\n    return true;\n  });\n\n  // Let the extension know the content script is ready\n  try {\n    chrome.runtime.sendMessage({ action: \"contentScriptReady\" });\n  } catch (e) {\n    // Ignore errors\n  }\n};\n\n// Start the extension\ninitialize();\n"],"names":["highlightedElement","overlay","originalDOM","enhancedDOM","generateUniqueId","getXPath","element","_a","ix","siblings","i","sibling","path","tagName","getCssSelector","selector","classes","c","createDOMNodeRepresentation","depth","nodeId","attributes","attr","node","childNode","error","getDOMTree","highlightElement","rect","findElementById","id","toggleEnhancedDOM","enabled","enhanceDOMSemantics","div","img","input","type","addHighlightStyles","style","initialize","message","sender","sendResponse","result"],"mappings":"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"}